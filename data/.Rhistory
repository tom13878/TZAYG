options(scipen=999)
summary(ADL_model_Turk)
rm(list=ls())
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
# get data on Brazil as a time series and remove any NA values
Brazil <- subset(data, country=='Brazil')
Brazil_ts <- ts(Brazil[, c('VAperHa', 'arable_area')], start=1960, end=2010, freq=1)
Brazil_ts <- na.remove(Brazil_ts)
# fit an ADL model will matches the information on the lags
area <- ts(embed(Brazil_ts[, 'arable_area'], 6), start=1964, end=2010, freq=1)
VA <- ts(embed(Brazil_ts[, 'VAperHa'], 6), start=1964, end=2010, freq=1)
ADL_model_Braz <- lm(area[,1] ~ area[, 2] + area[, 3] + area[, 4] + area[,5] + area[,6] +
VA[,1] + VA[,2] + VA[,3] + VA[,4] + VA[,5] + VA[,6])
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
library(dplyr)
library(tseries)
Turkey <- subset(data, country=='Turkey')
Turkey_ts <- ts(Turkey[, c('VAperHa', 'total_area')], start=1960, end=2010, freq=1)
Turkey_ts <- na.remove(Turkey_ts)
area <- ts(embed(Turkey_ts[, 'total_area'], 6), start=1967, end=2010, freq=1)
VA <- ts(embed(Turkey_ts[, 'VAperHa'], 6), start=1967, end=2010, freq=1)
# estimate the ADL model
ADL_model_Turk <- lm(area[,1] ~ area[,2] + area[,3] + area[,4] + area[,5] + area[,6] +
VA[, 1] + VA[, 2] + VA[, 3] + VA[, 4] + VA[, 5] + VA[, 6])
stargazer(ADL_model_Turk, ADL_model_Braz, out=TRUE)
stargazer(ADL_model_Turk, ADL_model_Braz, out='M:/test.html')
?stargzaer
stargazer
?stargazer
stargazer(ADL_model_Turk, ADL_model_Braz, , type="html", out='M:/test.html')
stargazer(ADL_model_Turk, ADL_model_Braz, type="html", out='M:/test.html')
alpha <- sum(coef(ADL_model_Turk)[2:6])
alpha
beta <- sum(coef(ADL_model_Turk)[7:12])/(1-alpha)
Int <- coef(ADL_model_Turk)[1]/(1-alpha)
Int
beta
alpha <- sum(coef(ADL_model_Braz)[2:5])
beta <- sum(coef(ADL_model_Braz)[6:10])/(1-alpha)
Int <- coef(ADL_model_Braz)[1]/(1-alpha)
beta
Int
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
# get data on Brazil as a time series and remove any NA values
Brazil <- subset(data, country=='Brazil')
Brazil_ts <- ts(Brazil[, c('VAperHa', 'arable_area')], start=1960, end=2010, freq=1)
Brazil_ts <- na.remove(Brazil_ts)
# fit an ADL model will matches the information on the lags
area <- ts(embed(Brazil_ts[, 'arable_area'], 6), start=1964, end=2010, freq=1)
VA <- ts(embed(Brazil_ts[, 'VAperHa'], 6), start=1964, end=2010, freq=1)
ADL_model_Braz <- lm(area[,1] ~ area[, 2] + area[, 3] + area[, 4] + area[,5] + area[,6] +
VA[,1] + VA[,2] + VA[,3] + VA[,4] + VA[,5] + VA[,6])
# use th ADL model results to calculate cointegration coefficients
# Only get very strange results for Brazil - this might need a general to specific modelling approach
alpha <- sum(coef(ADL_model_Braz)[2:5])
beta <- sum(coef(ADL_model_Braz)[6:10])/(1-alpha)
Int <- coef(ADL_model_Braz)[1]/(1-alpha)
ECM <- ts(area[,1] - beta*VA[, 1] - Int, end = 2010, freq=1)
adf.test(ECM)
adf.test(ECM, k=2)
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
library(dplyr)
library(tseries)
Turkey <- subset(data, country=='Turkey')
Turkey_ts <- ts(Turkey[, c('VAperHa', 'total_area')], start=1960, end=2010, freq=1)
Turkey_ts <- na.remove(Turkey_ts)
area <- ts(embed(Turkey_ts[, 'total_area'], 6), start=1967, end=2010, freq=1)
VA <- ts(embed(Turkey_ts[, 'VAperHa'], 6), start=1967, end=2010, freq=1)
# estimate the ADL model
ADL_model_Turk <- lm(area[,1] ~ area[,2] + area[,3] + area[,4] + area[,5] + area[,6] +
VA[, 1] + VA[, 2] + VA[, 3] + VA[, 4] + VA[, 5] + VA[, 6])
# from the ADL model estimate the beta and the intercept.
alpha <- sum(coef(ADL_model_Turk)[2:6])
beta <- sum(coef(ADL_model_Turk)[7:12])/(1-alpha)
Int <- coef(ADL_model_Turk)[1]/(1-alpha)
ECM <- ts(area[,1] - beta*VA[, 1] - Int, end = 2010, freq=1)
adf.test(ECM)
adf.test(ECM, k=2)
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
# get data on Brazil as a time series and remove any NA values
Brazil <- subset(data, country=='Brazil')
Brazil_ts <- ts(Brazil[, c('VAperHa', 'arable_area')], start=1960, end=2010, freq=1)
Brazil_ts <- na.remove(Brazil_ts)
# fit an ADL model will matches the information on the lags
area <- ts(embed(Brazil_ts[, 'arable_area'], 6), start=1964, end=2010, freq=1)
VA <- ts(embed(Brazil_ts[, 'VAperHa'], 6), start=1964, end=2010, freq=1)
ADL_model_Braz <- lm(area[,1] ~ area[, 2] + area[, 3] + area[, 4] + area[,5] + area[,6] +
VA[,1] + VA[,2] + VA[,3] + VA[,4] + VA[,5] + VA[,6])
# use th ADL model results to calculate cointegration coefficients
# Only get very strange results for Brazil - this might need a general to specific modelling approach
alpha <- sum(coef(ADL_model_Braz)[2:5])
beta <- sum(coef(ADL_model_Braz)[6:10])/(1-alpha)
Int <- coef(ADL_model_Braz)[1]/(1-alpha)
ECM <- ts(area[,1] - beta*VA[, 1] - Int, end = 2010, freq=1)
adf.test(ECM)
adf.test(ECM, k=2)
rm(list=ls())
data <- read.csv('M:/land_supply_data/analysis_data')
data <- select(data, country, year = variable,
arable_area = Arable.land.and.Permanent.crops,
total_area = Agricultural.area, VAperHa)
library(dplyr)
library(tseries)
Turkey <- subset(data, country=='Turkey')
Turkey_ts <- ts(Turkey[, c('VAperHa', 'total_area')], start=1960, end=2010, freq=1)
Turkey_ts <- na.remove(Turkey_ts)
tsp(Turkey_ts)
library(mice)
library(VIM)
library(lattice)
library(ggplot2)
comp <- read.csv("M:/comp.csv")
row.names(comp) <- comp$X
comp$y3_hhid <- comp$plotnum comp$X<- NULL
comp$y3_hhid <- comp$plotnum <- comp$X<- NULL
head(comp)
marginplot(comp[, 1:2], col=c('blue', 'red', 'orange'))
marginplot(comp[, 1:2], col=c('blue', 'red', 'orange'))
imp1 <- mice(comp, m=5)
head(imp1$imp$area.gps)
test <- (complete(imp1, 1)$area.gps+complete(imp1, 2)$area.gps+complete(imp1, 3)$area.gps+complete(imp1, 4)$area.gps+complete(imp1, 5)$area.gps)/5
comp2 <- select(comp, area.gps, area.est)
library(dplyr)
comp2 <- select(comp, area.gps, area.est)
head(comp2)
comp2$area.gps <- ifelse(is.na(comp$area.gps), test, comp$area.gps)
comp2$dev <- comp2$area.gps - comp2$area.est
dev2 <- comp$area.gps - comp2$area.est
plot(comp2$dev, col='red')
points(dev2, col='blue')
area_impute_gps <- select(comp2, area.gps)
head(area_impute_gps)
?strsplit
test <-strsplit(row.names(area_impute_gps), "M")
test[[1]]
x <- for(i in 1:length(test)){test[i][1]}
for(i in 1:length(test)){test[i][1]}
for(i in 1:length(test)){print(test[i][1])}
test[1][1]
test[1][1][1]
for(i in 1:length(test)){print(test[[i]][1])}
x <-for(i in 1:length(test)){(test[[i]][1])}
x <-for(i in 1:length(test)){test[[i]][1]}
x <-for(i in 1:length(test)){print(test[[i]][1])}
x <- lapply(test, function(elt) return(elt[1]))
x <- sapply(test, function(elt) return(elt[1]))
head(x)
head9comp2
head(comp2)
plotnum <- sapply(split_on_M, function(elt) return(paste('M', elt[2], sep="")))
split_on_M <-strsplit(row.names(area_impute_gps), "M")
y3_hhid <- sapply(split_on_M, function(elt) return(elt[1]))
plotnum <- sapply(split_on_M, function(elt) return(paste('M', elt[2], sep="")))
plotnum <- gsub(plotnum, " ", "")
?gsub
plotnum <- gsub(" ", "", plotnum)
area_impute_gps$y3_hhid <- y3_hhid
area_impute_gps$plotnum <- plotnum
head(area_impute_gps)
plotnum <- sapply(split_on_M, function(elt) return(paste('M', elt[2], sep="")))
plotnum <- gsub(" ", "", plotnum)
area_impute_gps$plotnum <- plotnum
head(area_impute_gps)
?mtcars
panel <- read.csv("M:/TZAYG/data/panel.csv")
library(ggplot2)
library(raster)
library(dplyr)
# ------------wave2--------------------
wave2 <- filter(panel, year==2010)
# make a maize yield variable
wave2 <- mutate(wave2, maize_yield=output_kg_new/area_gps_imputed)
# make a plot of the maize yield
qplot(maize_yield, data=wave2)
# restrict attention to what is feasible, say yield of 6000 or less
wave2 <- select(wave2, hhid, plotnum, maize_yield) %>% filter(maize_yield < 6000)
# read in gps coordinates to add to a map
filepath <- "C:/Users/morle001/Dropbox/Micro_IPOP/Data/Tanzania/2010_11/Stata/TZNPS2GEODTA/HH.Geovariables_Y2.dta"
gps <- read_dta(filepath)
library(haven)
gps <- read_dta(filepath)
plot(gps$lon_modified, gps$lat_modified)
wave2$hhid <- as.character(as.numeric(wave2$hhid))
gps$y2_hhid <- as.character(as.numeric(gps$y2_hhid))
names(gps)[names(gps)=="y2_hhid"] <- "hhid"
# join yield information with gps coordinates
wave2 <- left_join(wave2, select(gps, hhid, lon=lon_modified, lat=lat_modified))
TZA_map3 <- getData('GADM', country = "TZA", level = 3)
gps_mat <- cbind(wave2$lon, wave2$lat)
row.names(gps_mat) <- 1:nrow(gps_mat)
# check the projection in TZA_map3 and use it as the projection in the spatial
# points object so that the map and points match up
proj4string(TZA_map3)
llCRS <- CRS(proj4string(TZA_map3))
sp <- SpatialPoints(gps_mat, llCRS)
plot(sp)
plot(TZA_map3)
plot(sp, add=T)
plot(sp, add=T, col='red', pch=19)
sel <- over(sp, TZA_map3)
#
# column bind everything together and find the average per each of these
# districts (actually one level below districts)
complete <- cbind(wave2, sel)
complete <- select(complete, NAME_2, maize_yield)
complete <- unique(complete)
by_ward <- group_by(complete, NAME_2) %>% summarise(mean_yield=mean(maize_yield, na.rm=TRUE), N=n())
by_ward <- by_ward[!by_ward$NAME_2=="n.a. ( 1030)",]
by_ward <- by_ward[by_ward$mean_yield < 2500,]
TZA_map3@data <- left_join(TZA_map3@data, by_ward)
tf <- fortify(TZA_map3, region="PID")
tf <- rename(tf, PID=id)
TZA_map3@data$PID <- as.character(TZA_map3@data$PID)
lf <- left_join(tf, TZA_map3@data)
gg <- ggplot(lf) + geom_polygon(aes(long, lat, group = group, fill = mean_yield), color="#0e0e0e", size=0.15)
gg
library(devtools)
library(RColorBrewer)
devtools::source_gist("33baa3a79c5cfef0f6df") # random map gist from github
gg <- gg + theme_map()
gg <- gg + scale_fill_gradientn(colours=c("#ffffff", brewer.pal(n=9, name="YlOrRd")),
na.value="#ffffff")
gg
?gc
gc()
gg <- ggplot(lf) + geom_polygon(aes(long, lat, group = group, fill = mean_yield), color=NAME_1, size=0.15)
panel <- read.csv("M:/TZAYG/data/panel.csv")
panel$hhid <- as.character(panel$hhid)
names(panel)
agro <- select(panel, hhid, year, plotnum, output_kg_old, output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
library(dplyr)
agro <- select(panel, hhid, year, plotnum, output_kg_old, output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
by_year <- group_by(agro, year) %>% summarise(mean(area_gps_imputed, na.rm=TRUE))
by_year <- group_by(agro, year) %>% summarise(mean(area, na.rm=TRUE))
by_year
names(panel)
head9panel, select9area_est, area_gps, are_gps_imputed
head(panel, select(area_est, area_gps, area_gps_imputed))
head(select(panel, area_est, area_gps, area_gps_imputed))
head(select(panel, area_est, area_gps, area_gps_imputed) %>% filter(year==2010))
head(select(panel, area_est, area_gps, area_gps_imputed, year) %>% filter(year==2010))
head(select(panel, area_est, area_gps, area_gps_imputed, year) %>% filter(year==2012))
mean(panel$area_gps[panel$year==2012])
mean(panel$area_gps[panel$year==2012], na.rm=TRUE)
mean(panel$area_gps[panel$year==2010], na.rm=TRUE)
plot(panel$hhid, panel$area_gps_imputed)
plot(panel$hhid)
plot(panel$area_gps_imputed)
plot(panel$area_gps_imputed[panel$year=2010], col='red')
plot(panel$area_gps_imputed[panel$year==2010], col='red')
plot(panel$area_gps_imputed[panel$year==2012], col='blue')
plot(panel$area_gps_imputed[panel$year==2010], col='red')
plot(panel$area_gps_imputed[panel$year==2012], col='blue', add=T)
plot(panel$area_gps_imputed[panel$year==2010], col='red', add=TRUE)
plot(panel$area_gps_imputed[panel$year==2012], col='blue')
plot(panel$area_gps[panel$year==2012], col='blue')
summary9agro
summary(agro)
agro <- mutate(agro, yield=output_kg_new/area, nitrogen=nitrogen_kg/area,
maize_yield=output_kg_old/area)
summary(agro)
agro[agro$maize_yield==Inf,]
agro[agro$maize_yield %in% Inf,]
agro[agro$area %in% 0,]
agro[agro$area == 0,]
agro <- select(panel, hhid, year, plotnum, output_kg_old, output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
# set any are values that are 0 to NA
agro$area[agro$area %in% 0] <- NA
# make some new variables for yield and nitrogen application per acre
agro <- mutate(agro, yield=output_kg_new/area, nitrogen=nitrogen_kg/area,
maize_yield=output_kg_old/area)
summary(agro)
library(ggplot2)
qplot(maize_yield, colour=year, data=agro)
qplot(x=nitrogen,y=maize_yield, colour=year, data=agro)
qplot(x=nitrogen,y=maize_yield, colour=year, data=agro[agro$nitrogen<200 & agro$yield<6000,])
head(agro[agro$output_kg_old==agro$output_kg_new])
head(agro[agro$output_kg_old==agro$output_kg_new,])
min(agro$maize_share, na.rm=TRUE)
summary(agro)
sum(agro$maize_share %in% 0)
plot(agro$maize_share)
head(agro[agro$maize$share %in% 0,])
head(agro[agro$maize_share %in% 0,])
panel <- read.csv("M:/TZAYG/data/panel.csv")
panel$hhid <- as.character(panel$hhid)
# select out variables which are interesting for
# agronomists
agro <- select(panel, hhid, plotnum, year, output_kg_old, output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
# set any are values that are 0 to NA
agro$area[agro$area %in% 0] <- NA
# make some new variables for yield and nitrogen application per acre
agro <- mutate(agro, yield=output_kg_new/area, nitrogen=nitrogen_kg/area,
maize_yield=output_kg_old/area)
# not clear why there are some ploys that have no maize on them but stil slipped
# through the net. Not a big deal but need to look at this later
sum(agro$maize_share %in% 0)
summary(agro)
write.csv(agro, "M:/GYGA_tanzania.csv", row.names=FALSE)
library(haven)
gps <- read_dta("C:/Users/morle001/Dropbox/Micro_IPOP/Data/Tanzania/2010_11/Stata/TZNPS2GEODTA/HH.Geovariables_Y2.dta")
gps <- rename(gps, y2_hhid=hhid)
gps <- rename(gps, hhid=y2_hhid)
gps$hhid <- as.character(as.integer(gps$hhid))
head(gps$hhid)
all(panel$hhid %in% gps$hhid)
all(unique(panel$hhid) %in% unique(gps$hhid))
table(unique(panel$hhid) %in% unique(gps$hhid))
gps$hhid <- as.character(gps$hhid)
all(unique(panel$hhid) %in% unique(gps$hhid))
library(dplyr)
panel <- read.csv("M:/TZAYG/data/panel.csv")
panel$hhid <- as.character(panel$hhid)
agro <- select(panel, hhid, plotnum, year, maize_output=output_kg_old, plot_output=output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
agro <- filter(agro, year=2010)
agro <- filter(agro, year==2010)
agro$area[agro$area %in% 0] <- NA
agro <- mutate(agro, yield=output_kg_new/area, nitrogen=nitrogen_kg/area,
maize_yield=output_kg_old/area)
agro <- mutate(agro, yield=plot_output/area, nitrogen=nitrogen_kg/area,
maize_yield=maize_output/area)
sum(agro$maize_share %in% 0)
library(haven)
gps_w1 <- read_dta("C:/Users/morle001/Dropbox/Micro_IPOP/Data/Tanzania/2010_11/Stata/TZNPS2GEODTA/HH.Geovariables_Y2.dta")
gps <- rename(gps, hhid=y2_hhid)
gps_w1 <- rename(gps_w1, hhid=y2_hhid)
gps_w1 <- select(gps_w1, hhid, lon=lon_modified, lat=lat_modified)
head(gps)_w1
head(gps_w1)
sum(gps_w1$hhid %in% agro$hhid)
sum(unique(gps_w1$hhid) %in% unique(agro$hhid))
all(unique(gps_w1$hhid) %in% unique(agro$hhid))
table(unique(gps_w1$hhid) %in% unique(agro$hhid))
length(unique(gps_w1$hhid))
table(unique(agro$hhid) %in% unique(gps_w1$hhid))
gps$hhid <- as.character(as.integer(gps$hhid))
gps_w1$hhid <- as.character(as.integer(gps$hhid))
gps_w1$hhid <- as.character(as.integer(gps_w1$hhid))
summary(gps_w1$hhid)
table(is.na(gps_w1$hhid))
panel$hhid <- as.character(as.integer(panel$hhid))
head(panel)
class(panel$hhid)
head(as.integer(panel$hhid))
head(panel$hhid)
panel$hhid <- as.integer(panel$hhid)
panel$hhid <- as.character(panel$hhid)
agro <- filter(panel, year==2010) %>%
select(hhid, plotnum, year, maize_output=output_kg_old, plot_output=output_kg_new, maize_share,
irrig, org, nitrogen_kg, phosphorous_kg, potassium_kg,
area=area_gps_imputed)
agro$area[agro$area %in% 0] <- NA
agro <- mutate(agro, yield=plot_output/area, nitrogen=nitrogen_kg/area,
maize_yield=maize_output/area)
gps <- read_dta("C:/Users/morle001/Dropbox/Micro_IPOP/Data/Tanzania/2010_11/Stata/TZNPS2GEODTA/HH.Geovariables_Y2.dta")
gps <- rename(gps, hhid=y2_hhid)
gps <- select(gps, hhid, lon=lon_modified, lat=lat_modified)
table(unique(agro$hhid) %in% unique(gps$hhid))
sum(unique(agro$hhid) %in% unique(gps$hhid))
head(agro$hhid)
panel <- read.csv("M:/TZAYG/data/panel.csv")
head(panel$hhid, 70)
class(panel$hhid)
panel$hhid <- as.character(panel$hhid)
sum(unique(agro$hhid) %in% unique(gps$hhid))
head(agro$hhid)
gpd$hhid[gps$hhid=='2147483647']
gps$hhid[gps$hhid=='2147483647']
round(8.4, 1)
round(8.4, )
round(8.4)
setwd("M:/wooldridge")
MROZ <- read.table("MROZ.RAW")
names(MROZ) <- c("inlf","hours", "kidslt6","kidsge6", "age", "educ", "wage",
"repwage", "hushrs", "husage", "huseduc", "huswage", "faminc",
"mtr", "motheduc", "fatheduc", "unem", "city", "exper",
"nwifeinc", "lwage", "expersq")
head(MROZ)
myprobit <- glm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6, family = binomial(link = "probit"),
data = MROZ)
summary(myprobit)
options(scipen=999)
summary(myprobit)
summary(lm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6,data = MROZ))
mylogit <- glm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6, family = binomial(link = "logit"),
data = MROZ)
summary(mylogit)
rm(list=ls())
library(ggplot2)
# for maps
library(raster)
# for data wrangling
library(haven)
library(data.table)
library(reshape2)
library(plyr)
detach(package:dplyr)
library(dplyr)
# step 1. - get teh voucher information from the second wave of survey
setwd("M:/TZAYG/data/2010")
vouch <- read_dta("plot_variables_w2.dta") %>% select(y2_hhid, voucher1, voucher2)
vouch <- melt(vouch, id.vars="y2_hhid") %>% unique
vouch <- ddply(vouch, .(y2_hhid), summarise, v=sum(value %in% 1))
# step 2. - get the political information from community survey
fp2 <- "N:/Internationaal Beleid  (IB)/Projecten/2285000066 Africa Maize Yield Gap/SurveyData/TZA/2010/Stata/TZNPS2COMDTA"
setwd(fp2)
pol <- read_dta("COMSEC_CI.dta") %>% select(region=id_01, district=id_02, ward=id_03, position=cm_i01,
sex=cm_i02, resident=cm_i05, party=cm_i06, village=cm_i07, religion=cm_i10)
pol$position <- as_factor(pol$position)
pol$sex <- as_factor(pol$sex)
pol$party <- as_factor(pol$party)
pol$religion <- ifelse(pol$religion %in% 1, "TDL", ifelse(pol$religion %in% 2, "CHRSTN", ifelse(pol$religion %in% 3, "MSLM", "OTHR")))
# step3. join voucher information with gps
setwd("N:/Internationaal Beleid  (IB)/Projecten/2285000066 Africa Maize Yield Gap/SurveyData/TZA/2010/Stata/TZNPS2GEODTA")
gps <- read_dta("HH.Geovariables_Y2.dta") %>% select(y2_hhid, lon=lon_modified, lat=lat_modified)
vouch <- left_join(gps, vouch)
# step 4. join political information with gps
# a. get the hh info first
filepath <- "N:/Internationaal Beleid  (IB)/Projecten/2285000066 Africa Maize Yield Gap/SurveyData/TZA/2010/Stata/TZNPS2HH1DTA"
setwd(filepath)
HHA <- read_dta("HH_SEC_A.dta")
HHA <- unique(select(HHA, clusterid, region, district, ward))
# b. join gps and hh
setwd("N:/Internationaal Beleid  (IB)/Projecten/2285000066 Africa Maize Yield Gap/SurveyData/TZA/2010/Stata/TZNPS2COMDTA")
eaoff <- read_dta("TZY2.EA.Offsets.dta") %>% select(clusterid, lon=lon_modified, lat=lat_modified)
ea_hh <- left_join(HHA, eaoff) %>% select(-clusterid)
# c. join gps/hh with the pol data on region, district and ward only
ea_hh_pol <- left_join(pol, ea_hh) %>% na.omit %>% unique
# step 5. get a map of tanzania
tanzania <- getData('GADM', country = "TZA", level = 3)
# step 6. overlay to get the ward names
pol_mat <- cbind(ea_hh_pol$lon, ea_hh_pol$lat)
voucher_mat <- cbind(vouch$lon, vouch$lat)
llCRS <- CRS(proj4string(tanzania))
sp_pol <- SpatialPoints(pol_mat, llCRS)
sp_vouch <- SpatialPoints(voucher_mat, llCRS)
# overlay selection
sel_pol <- over(sp_pol, tanzania)
sel_vouch <- over(sp_vouch, tanzania)
complete_pol <- cbind(ea_hh_pol, select(sel_pol, NAME_1, NAME_2, NAME_3))
complete_vouch <- cbind(vouch, select(sel_vouch, NAME_1, NAME_2, NAME_3))
# now calculate pol information by ward
by_ward_pol <- group_by(complete_pol, NAME_1, NAME_3) %>%
summarise(ccm=all(party %in% "CCM"),
nobs=n(),
nccm=sum(party %in% "CCM"),
nothr=sum(!(party %in% "CCM")),
nccm_pc=sum(party %in% "CCM")/n(),
nothr_pc=sum(!(party %in% "CCM"))/n())
complete_vouch <- select(complete_vouch, -lon, -lat, -NAME_2)
x <-c("by_ward_pol", "complete_vouch")
rm(list=ls()[!(ls() %in% x)])
vpol <- left_join(complete_vouch, by_ward_pol)
vpol <- mutate(vpol, intensity=cut(nccm_pc, breaks=seq(0, 1, 0.05)))
vpol <- mutate(vpol, v=ifelse(is.na(v), 0, v))
vpol <- mutate(vpol, voucher=ifelse(!(v %in% 0), 1, 0))
setwd("M:/TZAYG/data/")
tp <- read_dta("tp.dta")
names(tp)
summary(tp$nitrogen)
tp$frt <- ifelse(tp$nitrogen %in% 0, 0, 1)
x <- select(tp, hhid, y12, pest, frt, ngn_prc, mech, sex, age, zone, rural, residency) %>% unique()
summary(x)
x <- ddply(x, .(hhid))
summary(x)
head(x)
summary(x$ngn_prc)
setwd("M:/TZAYG/data/")
tp <- read_dta("tp.dta")
tp$frt <- ifelse(tp$nitrogen %in% 0, 0, 1)
tp$zone <- as_factor(tp$zone)
x <- select(tp, hhid, y12, pest, frt, ngn_prc, mech, sex, age, zone, rural, residency) %>% unique()
x2 <- left_join(x, vpol, by=c("y2_hhid"="hhid"))
head(vpol)
x2 <- left_join(x, vpol, by=c("hhid"="y2_hhid"))
myprobit <- glm(voucher ~ nccm_pc + sex + age +pest + frt + ngn_prc + mech + residency + rural + y12, family = binomial(link = "probit"),
data = x2)
summary(myprobit)
hist(resid(myprobit))
plot(resid(myprobit))
plot(myprobit)
plot(fitted(myprobit), resid(myprobit))
1.02379910/2.5
myprobit <- glm(voucher ~ nccm_pc + sex + age +pest + frt + ngn_prc + mech + residency + rural + y12 + zone, family = binomial(link = "probit"),
data = x2)
summary(myprobit)
1.12743131/2.5
